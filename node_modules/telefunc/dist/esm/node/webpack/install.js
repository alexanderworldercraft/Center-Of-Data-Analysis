export { install };
import { resolve } from 'node:path';
import { logResult } from '../server/shield/codegen/generateShield';
import { getRoot } from './getInfo';
const dir = __dirname + (() => '')(); // trick to avoid `@vercel/ncc` to glob import
const loader = resolve(dir, './loader.js');
function install(config, logSuccessPrefix) {
    config.module.rules.push({
        test: /\.telefunc\./,
        use: [{ loader }],
    });
    if (logSuccessPrefix) {
        // Possible altenertive: use `process.on('exit', () => { /*...*/ })`
        //  - `afterEmitPlugin()` logs at the right time and fits well Next.js's build logs, but it may not fit the build logs of other stacks.
        //  - Reliable exit callback: https://stackoverflow.com/questions/14031763/doing-a-cleanup-action-just-before-node-js-exits/49392671#49392671
        config.plugins.push(afterEmitPlugin(logSuccessPrefix));
    }
}
function afterEmitPlugin(logSuccessPrefix) {
    return {
        apply: (compiler) => {
            compiler.hooks.afterEmit.tap('AfterEmitPlugin', (_compilation) => {
                const root = getRoot(compiler);
                logResult(root, logSuccessPrefix, null);
            });
        },
    };
}
