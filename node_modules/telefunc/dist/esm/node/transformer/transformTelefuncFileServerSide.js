export { transformTelefuncFileServerSide };
import { getExportNames } from './getExportNames';
import { assertPosixPath } from './utils';
import { generateShield } from '../server/shield/codegen/generateShield';
import { getServerConfig } from '../server/serverConfig';
async function transformTelefuncFileServerSide(src, id, appRootDir, skipRegistration, isDev) {
    assertPosixPath(id);
    assertPosixPath(appRootDir);
    const exportNames = await getExportNames(src);
    let code = decorateTelefunctions(exportNames, src, id.replace(appRootDir, ''), appRootDir, skipRegistration);
    const config = getServerConfig();
    if (id.endsWith('.ts') && (!isDev || config.shield.dev)) {
        code = generateShield(code, id, appRootDir);
    }
    return code;
}
function decorateTelefunctions(exportNames, src, filePath, appRootDir, skipRegistration) {
    assertPosixPath(filePath);
    return [
        'import { __decorateTelefunction } from "telefunc";',
        // No break line before `src` to avoid breaking source map lines
        src,
        '\n\n',
        exportNames
            .map((exportName) => `__decorateTelefunction(${exportName}, "${exportName}", "${filePath}", "${appRootDir}", ${String(skipRegistration)});`)
            .join('\n'),
        '\n',
    ].join('');
}
