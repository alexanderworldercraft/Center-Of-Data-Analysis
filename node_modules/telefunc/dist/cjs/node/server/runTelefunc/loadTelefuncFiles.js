"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.loadTelefuncFiles = loadTelefuncFiles;
const utils_1 = require("../../utils");
const loadTelefuncFilesWithVite_1 = require("../../vite/loadTelefuncFilesWithVite");
const loadTelefuncFilesWithRegistration_1 = require("./loadTelefuncFilesWithRegistration");
const loadTelefuncFilesFromConfig_1 = require("./loadTelefuncFilesFromConfig");
const picocolors_1 = __importDefault(require("@brillout/picocolors"));
async function loadTelefuncFiles(runContext) {
    // - The user manually provides the list of `.telefunc.js` files with `config.telefuncFiles`
    {
        if (runContext.telefuncFilesManuallyProvidedByUser) {
            (0, utils_1.assert)((0, utils_1.hasProp)(runContext, 'telefuncFilesManuallyProvidedByUser', 'string[]')); // Help TS narrow `runContext`
            const { telefuncFilesLoaded, telefuncFilesAll } = await (0, loadTelefuncFilesFromConfig_1.loadTelefuncFilesFromConfig)(runContext);
            (0, utils_1.assertUsage)(Object.keys(telefuncFilesAll).length > 0, getNothingFoundErr('manually provided by user'));
            return { telefuncFilesLoaded, telefuncFilesAll };
        }
    }
    // - Next.js
    // - Nuxt 2
    // - Vite: when the user manually imports the server production entry (https://github.com/brillout/vite-plugin-server-entry#manual-import)
    {
        const telefuncFilesLoaded = (0, loadTelefuncFilesWithRegistration_1.loadTelefuncFilesWithRegistration)();
        if (telefuncFilesLoaded) {
            const telefuncFilesAll = Object.keys(telefuncFilesLoaded);
            (0, utils_1.assertUsage)(Object.keys(telefuncFilesAll).length > 0, getNothingFoundErr('automatic registration'));
            return { telefuncFilesLoaded, telefuncFilesAll };
        }
    }
    // Vite:
    // - In development, `.telefunc.js` files provided with Vite's development server
    // - In production, `.telefunc.js` files provided with @brillout/vite-plugin-server-entry
    {
        const res = await (0, loadTelefuncFilesWithVite_1.loadTelefuncFilesWithVite)(runContext);
        if (res) {
            const { telefuncFilesLoaded, viteProvider, telefuncFilesAll } = res;
            (0, utils_1.assertUsage)(Object.keys(telefuncFilesAll).length > 0, getNothingFoundErr(viteProvider));
            return { telefuncFilesLoaded, telefuncFilesAll };
        }
        else if ((0, utils_1.isVikeApp)() || !(0, utils_1.isWebpack)()) {
            // Show [manual import error](https://github.com/brillout/vite-plugin-server-entry#manual-import):
            // ```
            // [@brillout/vite-plugin-server-entry][Wrong Usage] The server production entry is missing.
            // (Re-)build your app and try again. If you still get this error, then you need to manually
            // import the server production entry.
            // ```
            //
            const res2 = await (0, loadTelefuncFilesWithVite_1.loadTelefuncFilesWithVite)(runContext, true);
            (0, utils_1.assert)(res2 === null);
            (0, utils_1.assert)(false); // loadTelefuncFilesWithVite() should have called assertUsage()
        }
    }
    // No retrieval method found
    (0, utils_1.assertUsage)(false, `Couldn't find method for retrieving ${picocolors_1.default.cyan('.telefunc.js')} files. Is your stack supported?`);
}
function getNothingFoundErr(retrievalMethod) {
    return `No ${picocolors_1.default.code('.telefunc.{js|ts|...}')} file found. Did you create one? (Retrieval method: ${retrievalMethod}.)`;
}
