"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.applyShield = applyShield;
const shield_1 = require("../shield");
const utils_1 = require("../../utils");
function applyShield(runContext) {
    const { telefunction } = runContext;
    const hasShield = !(0, shield_1.shieldIsMissing)(telefunction);
    if ((0, utils_1.isProduction)()) {
        (0, utils_1.assertWarning)(hasShield || telefunction.length === 0, `The telefunction ${runContext.telefunctionName}() (${runContext.telefuncFilePath}) accepts arguments yet is missing shield(), see https://telefunc.com/shield`, { onlyOnce: true });
    }
    if (!hasShield) {
        return { isValidRequest: true };
    }
    const applyResult = (0, shield_1.shieldApply)(telefunction, runContext.telefunctionArgs);
    if (applyResult === true) {
        return { isValidRequest: true };
    }
    if (runContext.logInvalidRequests) {
        const err = new Error([
            `The arguments passed to the telefunction ${runContext.telefunctionName}() (${runContext.telefuncFilePath}) have the wrong type.`,
            `Arguments: \`${JSON.stringify(runContext.telefunctionArgs)}\`.`,
            `Wrong type: ${applyResult}`,
        ].join(' '));
        console.error(err);
    }
    return { isValidRequest: false };
}
