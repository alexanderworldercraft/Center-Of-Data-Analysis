"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.transformTelefuncFileClientSideSync = transformTelefuncFileClientSideSync;
exports.getCode = getCode;
const node_path_1 = require("node:path");
const utils_1 = require("../utils");
function transformTelefuncFileClientSideSync(id, appRootDir, exportNames) {
    (0, utils_1.assertPosixPath)(id);
    (0, utils_1.assertPosixPath)(appRootDir);
    let telefuncFilePath = node_path_1.posix.relative(appRootDir, id);
    (0, utils_1.assertPosixPath)(telefuncFilePath);
    (0, utils_1.assertUsage)(!telefuncFilePath.startsWith('../'), `The telefunc file ${telefuncFilePath} needs to live inside ${appRootDir} (the client-side root directory, i.e. the root directory of Vite/Vike/Next.js/Nuxt/...)`);
    (0, utils_1.assert)(!telefuncFilePath.startsWith('/') && !telefuncFilePath.startsWith('.'));
    telefuncFilePath = `/${telefuncFilePath}`;
    const code = getCode(exportNames, telefuncFilePath);
    return code;
}
function getCode(exportNames, telefuncFilePath) {
    const lines = [];
    lines.push('// @ts-nocheck');
    lines.push(`import { __remoteTelefunctionCall } from 'telefunc/client';`);
    exportNames.forEach((exportName) => {
        const varName = exportName === 'default' ? 'defaultExport' : exportName;
        lines.push(`const ${varName} =  (...args) => __remoteTelefunctionCall('${telefuncFilePath}', '${exportName}', args);`);
        {
            const key = (0, utils_1.getTelefunctionKey)(telefuncFilePath, exportName);
            lines.push(`${varName}._key = ${JSON.stringify(key)};`);
        }
        if (exportName === 'default') {
            lines.push(`export default ${varName};`);
        }
        else {
            lines.push(`export { ${varName} };`);
        }
    });
    const code = lines.join('\n');
    return code;
}
