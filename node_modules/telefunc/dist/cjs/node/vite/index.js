"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.telefunc = plugin;
exports.default = plugin;
const transform_1 = require("./plugins/transform");
const commonConfig_1 = require("./plugins/commonConfig");
const devConfig_1 = require("./plugins/devConfig");
const buildConfig_1 = require("./plugins/buildConfig");
const retrieveDevServer_1 = require("./plugins/retrieveDevServer");
const packageJsonFile_1 = require("./plugins/packageJsonFile");
const importBuild_1 = require("./plugins/importBuild");
const previewConfig_1 = require("./plugins/previewConfig");
const printShieldGenResult_1 = require("./plugins/printShieldGenResult");
const toggle_1 = require("./importGlob/toggle");
const serverConfig_1 = require("../server/serverConfig");
// Return as `any` to avoid Plugin type mismatches when there are multiple Vite versions installed
function plugin(
/** @deprecated */
configUser) {
    (0, toggle_1.importGlobOn)();
    // We use this for minimal /examples/* that don't have any server code.
    // Telefunc users aren't expected to use this. (We expect users to always have server code.)
    Object.assign(serverConfig_1.config, configUser);
    const plugins = [
        (0, transform_1.transform)(),
        (0, commonConfig_1.commonConfig)(),
        ...(0, devConfig_1.devConfig)(),
        (0, buildConfig_1.buildConfig)(),
        (0, retrieveDevServer_1.retrieveDevServer)(),
        (0, packageJsonFile_1.packageJsonFile)(),
        ...(0, importBuild_1.importBuild)(),
        (0, previewConfig_1.previewConfig)(),
        (0, printShieldGenResult_1.printShieldGenResult)(),
    ];
    return plugins;
}
// Ensures following works: `const telefunc = require('telefunc/vite')` / `import telefunc from 'telefunc/vite'`
//  - It needs to live at the end of this file, in order to ensure we do it after all assignments to `exports`.
try {
    module.exports = Object.assign(exports.default, exports);
}
catch (_a) { }
