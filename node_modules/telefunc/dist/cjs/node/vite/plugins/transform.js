"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.transform = transform;
const transformTelefuncFileClientSide_1 = require("../../transformer/transformTelefuncFileClientSide");
const transformTelefuncFileServerSide_1 = require("../../transformer/transformTelefuncFileServerSide");
const utils_1 = require("../utils");
function transform() {
    let root;
    let isDev = false;
    return {
        name: 'telefunc:transform',
        enforce: 'pre',
        configResolved: (config) => {
            root = (0, utils_1.toPosixPath)(config.root);
            (0, utils_1.assert)(root);
        },
        configureServer() {
            isDev = true;
        },
        async transform(code, id, options) {
            if (!id.includes('.telefunc.')) {
                return;
            }
            const isClientSide = !(options === null || options === void 0 ? void 0 : options.ssr);
            if (isClientSide) {
                code = await (0, transformTelefuncFileClientSide_1.transformTelefuncFileClientSide)(code, id, root);
            }
            else {
                code = await (0, transformTelefuncFileServerSide_1.transformTelefuncFileServerSide)(code, id, root, true, isDev);
            }
            if (isClientSide) {
                return {
                    code,
                    // Pass through source map https://rollupjs.org/plugin-development/#source-code-transformations
                    map: null,
                };
            }
            else {
                return code;
            }
        },
    };
}
