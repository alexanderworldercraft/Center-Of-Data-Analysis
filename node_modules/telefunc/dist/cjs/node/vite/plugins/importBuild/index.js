"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.importBuild = importBuild;
const plugin_1 = require("@brillout/vite-plugin-server-entry/plugin");
const utils_1 = require("../../utils");
const node_path_1 = __importDefault(require("node:path"));
const getTelefuncManifest_1 = require("./getTelefuncManifest");
const telefuncFilesGlobPath_1 = require("../../importGlob/telefuncFilesGlobPath");
function importBuild() {
    let config;
    return [
        {
            name: 'telefunc:importBuild:config',
            enforce: 'post',
            configResolved(config_) {
                config = config_;
            },
        },
        ...(0, plugin_1.serverProductionEntryPlugin)({
            getServerProductionEntry: () => {
                return getServerProductionEntryCode(config);
            },
            libraryName: utils_1.projectInfo.projectName,
        }),
    ];
}
function getServerProductionEntryCode(config) {
    const importPath = getImportPath(config);
    const telefuncManifest = (0, getTelefuncManifest_1.getTelefuncManifest)();
    // console.log(`\n  importPath: ${importPath}\n  outDirServer: ${outDirServer}\n  importPathAbsolute: ${importPathAbsolute}\n  config.build.outDir: ${config.build.outDir}`)
    const importerCode = [
        `import { setTelefuncLoaders } from '${importPath}';`,
        `import * as telefuncFiles from '${telefuncFilesGlobPath_1.telefuncFilesGlobFilePath}';`,
        'setTelefuncLoaders({',
        `  loadTelefuncFiles: () => telefuncFiles,`,
        `  loadManifest: () => (${JSON.stringify(telefuncManifest, null, 2)})`,
        '});',
        '',
    ].join('\n');
    return importerCode;
}
function getImportPath(config) {
    // We resolve filePathAbsolute even if we don't use it: we use require.resolve() as an assertion that the relative path is correct
    const filePathAbsolute = (0, utils_1.toPosixPath)(
    // [RELATIVE_PATH_FROM_DIST] Current file: node_modules/telefunc/dist/cjs/node/vite/plugins/importBuild/index.js
    require.resolve(`../../../../../../dist/cjs/node/vite/plugins/importBuild/loadBuild.js`));
    if (
    // Let's implement a new config if a user needs the import to be a relative path instead of 'telefunc/__internal/loadImportBuild' (AFAIK there is no use case for relative paths for Telefunc)
    true) {
        return 'telefunc/__internal/loadBuild';
    }
    else {
        (0, utils_1.assert)(config.build.ssr); // outDir needs to be the outDir of the server-side
        const outDir = (0, utils_1.getOutDirAbsolute)(config);
        (0, utils_1.assertPosixPath)(outDir);
        (0, utils_1.assertPosixPath)(filePathAbsolute);
        const filePathRelative = node_path_1.default.posix.relative(outDir, filePathAbsolute);
        return filePathRelative;
    }
}
