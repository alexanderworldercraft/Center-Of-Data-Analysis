{
  "version": 3,
  "sources": ["../../vike-react/dist/integration/ssrEffect.js", "../../vike-react/dist/utils/isNotFalse.js", "../../vike-react/dist/config.js", "../../vike-react/dist/index.js"],
  "sourcesContent": ["export { ssrEffect };\nfunction ssrEffect({ configDefinedAt, configValue }) {\n    if (typeof configValue !== 'boolean')\n        throw new Error(`${configDefinedAt} should be a boolean`);\n    const env = {\n        // Always load on the client-side.\n        client: true,\n        // When the SSR flag is false, we want to render the page only on the client-side.\n        // We achieve this by loading `Page` only on the client-side: when onRenderHtml()\n        // gets a `Page` value that is undefined it skip server-side rendering.\n        server: configValue !== false,\n    };\n    return {\n        meta: {\n            Page: { env },\n            /* We don't do this to enable wraping <Head> with <Wrapper>\n            Wrapper: { env }, */\n            Layout: { env },\n            Loading: { env },\n        },\n    };\n}\n", "export function isNotFalse(val) {\n    return val !== false;\n}\n", "export { config as default };\nimport { ssrEffect } from './integration/ssrEffect.js';\nimport { isNotFalse } from './utils/isNotFalse.js';\nconst config = {\n    // @eject-remove start\n    name: 'vike-react',\n    require: {\n        vike: '>=0.4.182',\n    },\n    Loading: 'import:vike-react/__internal/integration/Loading:default',\n    // https://vike.dev/onRenderHtml\n    onRenderHtml: 'import:vike-react/__internal/integration/onRenderHtml:onRenderHtml',\n    // https://vike.dev/onRenderClient\n    onRenderClient: 'import:vike-react/__internal/integration/onRenderClient:onRenderClient',\n    // @eject-remove end\n    passToClient: [\n        '_configFromHook',\n        // https://github.com/vikejs/vike-react/issues/25\n        process.env.NODE_ENV !== 'production' && '$$typeof',\n    ].filter(isNotFalse),\n    // https://vike.dev/clientRouting\n    clientRouting: true,\n    hydrationCanBeAborted: true,\n    // https://vike.dev/meta\n    meta: {\n        Head: {\n            env: { server: true },\n            cumulative: true,\n        },\n        Layout: {\n            env: { server: true, client: true },\n            cumulative: true,\n        },\n        title: {\n            env: { server: true, client: true },\n        },\n        description: {\n            env: { server: true },\n        },\n        image: {\n            env: { server: true },\n        },\n        viewport: {\n            env: { server: true },\n        },\n        favicon: {\n            env: { server: true },\n            global: true,\n        },\n        lang: {\n            env: { server: true, client: true },\n        },\n        bodyHtmlBegin: {\n            env: { server: true },\n            cumulative: true,\n            global: true,\n        },\n        bodyHtmlEnd: {\n            env: { server: true },\n            cumulative: true,\n            global: true,\n        },\n        htmlAttributes: {\n            env: { server: true },\n            global: true,\n            cumulative: true, // for Vike extensions\n        },\n        bodyAttributes: {\n            env: { server: true },\n            global: true,\n            cumulative: true, // for Vike extensions\n        },\n        ssr: {\n            env: { config: true },\n            effect: ssrEffect,\n        },\n        stream: {\n            env: { server: true },\n        },\n        streamIsRequired: {\n            env: { server: true },\n        },\n        onBeforeRenderHtml: {\n            env: { server: true },\n            cumulative: true,\n        },\n        onAfterRenderHtml: {\n            env: { server: true },\n            cumulative: true,\n        },\n        onBeforeRenderClient: {\n            env: { client: true },\n            cumulative: true,\n        },\n        onAfterRenderClient: {\n            env: { client: true },\n            cumulative: true,\n        },\n        Wrapper: {\n            cumulative: true,\n            env: { client: true, server: true },\n        },\n        reactStrictMode: {\n            env: { client: true, server: true },\n        },\n        Loading: {\n            env: { server: true, client: true },\n        },\n    },\n};\n// @eject-remove start\n// This is required to make TypeScript load the global interfaces Vike.Config and Vike.PageContext so that they're always loaded: we can assume that the user always imports this file over `import vikeReact from 'vike-react/config'`\nimport './types/Config.js';\nimport './types/PageContext.js';\n// @eject-remove end\n", "// TODO/next-major-release: remove this file/export\nconsole.warn(\"[vike-react][warning][deprecation] Replace `import vikeReact from 'vike-react'` with `import vikeReact from 'vike-react/config'` (typically in your /pages/+config.js)\");\nexport { default } from './config.js';\n"],
  "mappings": "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",
  "names": []
}
