import "./chunk-EQCVQC35.js";

// node_modules/vike-react/dist/integration/ssrEffect.js
function ssrEffect({ configDefinedAt, configValue }) {
  if (typeof configValue !== "boolean")
    throw new Error(`${configDefinedAt} should be a boolean`);
  const env = {
    // Always load on the client-side.
    client: true,
    // When the SSR flag is false, we want to render the page only on the client-side.
    // We achieve this by loading `Page` only on the client-side: when onRenderHtml()
    // gets a `Page` value that is undefined it skip server-side rendering.
    server: configValue !== false
  };
  return {
    meta: {
      Page: { env },
      /* We don't do this to enable wraping <Head> with <Wrapper>
      Wrapper: { env }, */
      Layout: { env },
      Loading: { env }
    }
  };
}

// node_modules/vike-react/dist/utils/isNotFalse.js
function isNotFalse(val) {
  return val !== false;
}

// node_modules/vike-react/dist/config.js
var config = {
  // @eject-remove start
  name: "vike-react",
  require: {
    vike: ">=0.4.182"
  },
  Loading: "import:vike-react/__internal/integration/Loading:default",
  // https://vike.dev/onRenderHtml
  onRenderHtml: "import:vike-react/__internal/integration/onRenderHtml:onRenderHtml",
  // https://vike.dev/onRenderClient
  onRenderClient: "import:vike-react/__internal/integration/onRenderClient:onRenderClient",
  // @eject-remove end
  passToClient: [
    "_configFromHook",
    "$$typeof"
  ].filter(isNotFalse),
  // https://vike.dev/clientRouting
  clientRouting: true,
  hydrationCanBeAborted: true,
  // https://vike.dev/meta
  meta: {
    Head: {
      env: { server: true },
      cumulative: true
    },
    Layout: {
      env: { server: true, client: true },
      cumulative: true
    },
    title: {
      env: { server: true, client: true }
    },
    description: {
      env: { server: true }
    },
    image: {
      env: { server: true }
    },
    viewport: {
      env: { server: true }
    },
    favicon: {
      env: { server: true },
      global: true
    },
    lang: {
      env: { server: true, client: true }
    },
    bodyHtmlBegin: {
      env: { server: true },
      cumulative: true,
      global: true
    },
    bodyHtmlEnd: {
      env: { server: true },
      cumulative: true,
      global: true
    },
    htmlAttributes: {
      env: { server: true },
      global: true,
      cumulative: true
      // for Vike extensions
    },
    bodyAttributes: {
      env: { server: true },
      global: true,
      cumulative: true
      // for Vike extensions
    },
    ssr: {
      env: { config: true },
      effect: ssrEffect
    },
    stream: {
      env: { server: true }
    },
    streamIsRequired: {
      env: { server: true }
    },
    onBeforeRenderHtml: {
      env: { server: true },
      cumulative: true
    },
    onAfterRenderHtml: {
      env: { server: true },
      cumulative: true
    },
    onBeforeRenderClient: {
      env: { client: true },
      cumulative: true
    },
    onAfterRenderClient: {
      env: { client: true },
      cumulative: true
    },
    Wrapper: {
      cumulative: true,
      env: { client: true, server: true }
    },
    reactStrictMode: {
      env: { client: true, server: true }
    },
    Loading: {
      env: { server: true, client: true }
    }
  }
};

// node_modules/vike-react/dist/index.js
console.warn("[vike-react][warning][deprecation] Replace `import vikeReact from 'vike-react'` with `import vikeReact from 'vike-react/config'` (typically in your /pages/+config.js)");
export {
  config as default
};
//# sourceMappingURL=vike-react.js.map
